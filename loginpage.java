/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dsafinalproject2;


import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;



public class loginpage extends javax.swing.JFrame {
   
    
    //used to determine the current user's username
    //stores the username input that will be carried in the selection window
    //LinkedList<String> loginusernameDetails = new LinkedList<>();
    
    //stores the user's name,password,and contacts that will be used in the selection page once the user is logged in
    LinkedList<String> loginnameDetails = new LinkedList<>();
    LinkedList<String> loginpasswordDetails = new LinkedList<>();
    LinkedList<String> contactDetails = new LinkedList<>();
    //stores username and password inputs
    String loginnamefield, loginpassfield;
    
    //ArrayList that stores the previous accounts created
    ArrayList userlist, passlist, namelist, numlist;
    
    /**
     * Creates new form loginpage
     */
    public loginpage() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        loginpage = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        loginusername = new javax.swing.JTextField();
        loginbutton = new javax.swing.JButton();
        loginpassword = new javax.swing.JPasswordField();
        jLabel4 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        show = new javax.swing.JButton();
        hide = new javax.swing.JButton();
        back = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        clienttable = new javax.swing.JTable();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spring N' Flow - Log In");
        setMinimumSize(new java.awt.Dimension(1322, 758));
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(153, 153, 153));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        loginpage.setBackground(new java.awt.Color(255, 255, 255));
        loginpage.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 102, 102));
        jLabel2.setText("Username");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 17)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 102, 102));
        jLabel3.setText("Password");

        loginusername.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        loginusername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginusernameActionPerformed(evt);
            }
        });

        loginbutton.setBackground(new java.awt.Color(255, 153, 51));
        loginbutton.setFont(new java.awt.Font("Segoe UI", 1, 22)); // NOI18N
        loginbutton.setForeground(new java.awt.Color(255, 255, 255));
        loginbutton.setText("Login");
        loginbutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginbuttonActionPerformed(evt);
            }
        });

        loginpassword.setFont(new java.awt.Font("Segoe UI", 0, 19)); // NOI18N
        loginpassword.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                loginpasswordActionPerformed(evt);
            }
        });
        loginpassword.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyTyped(java.awt.event.KeyEvent evt) {
                loginpasswordKeyTyped(evt);
            }
        });

        jLabel4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsafinalproject2/login.png"))); // NOI18N
        jLabel4.setText("jLabel4");

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 26)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("User Login");

        show.setText("Yes");
        show.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                showMousePressed(evt);
            }
        });
        show.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                showActionPerformed(evt);
            }
        });

        hide.setText("View");
        hide.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                hideMousePressed(evt);
            }
        });
        hide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                hideActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout loginpageLayout = new javax.swing.GroupLayout(loginpage);
        loginpage.setLayout(loginpageLayout);
        loginpageLayout.setHorizontalGroup(
            loginpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginpageLayout.createSequentialGroup()
                .addGroup(loginpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(loginpageLayout.createSequentialGroup()
                        .addGap(244, 244, 244)
                        .addComponent(jLabel1))
                    .addGroup(loginpageLayout.createSequentialGroup()
                        .addGap(210, 210, 210)
                        .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(loginpageLayout.createSequentialGroup()
                        .addGap(120, 120, 120)
                        .addGroup(loginpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3)
                            .addComponent(jLabel2)
                            .addComponent(loginbutton, javax.swing.GroupLayout.DEFAULT_SIZE, 393, Short.MAX_VALUE)
                            .addComponent(loginusername)
                            .addComponent(loginpassword)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginpageLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(hide, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(121, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, loginpageLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(show, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
        );
        loginpageLayout.setVerticalGroup(
            loginpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(loginpageLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addGap(18, 18, 18)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(52, 52, 52)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginusername, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(26, 26, 26)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(loginpassword, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(loginpageLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(show)
                    .addComponent(hide))
                .addGap(34, 34, 34)
                .addComponent(loginbutton, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(79, Short.MAX_VALUE))
        );

        jPanel1.add(loginpage, new org.netbeans.lib.awtextra.AbsoluteConstraints(345, 26, -1, -1));

        back.setBackground(new java.awt.Color(153, 153, 153));
        back.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 26, 120, -1));

        jLabel6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsafinalproject2/pxfuel (1).jpg"))); // NOI18N
        jLabel6.setText("jLabel6");
        jPanel1.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 760));

        jPanel2.setLayout(null);

        clienttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Username", "Password", "Contact", "Address"
            }
        ));
        jScrollPane1.setViewportView(clienttable);

        jPanel2.add(jScrollPane1);
        jScrollPane1.setBounds(0, 0, 458, 408);

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 280, -1, -1));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void loginpasswordActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginpasswordActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginpasswordActionPerformed

    //LOGIN BUTTON:
    //To log into the app with the created account and password by the user/admin
    //Follows certain conditions in order to login as a user
    
    private void loginbuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginbuttonActionPerformed
        
    
      //Gets the string value of loginusername Textfield
      loginnamefield = loginusername.getText();
      
      //Gets the string value of loginpassword Textfield  
      loginpassfield = loginpassword.getText();

      //Exclusive username and password that admin knows
        
       if (loginnamefield.equals("admin") && loginpassfield.equals("1234")){
           
           adminpage adp = new adminpage();
           adp.setVisible(true);
           this.dispose();
        }
       
       
    //If loginnamefield is equals to "order" and loginpassfield is equals to "1234"    
       else if (loginnamefield.equals("order") && loginpassfield.equals("1234")){
    //It will show the order log page and dispose login page       
           new orderlog().setVisible(true);
           this.dispose();
        }    
       
       
       //Shows error message when the fields are empty
       
       else if(loginnamefield.isEmpty()&&loginpassfield.isEmpty()){
            JOptionPane.showMessageDialog(this,"Please input all fields", "Try again", JOptionPane.ERROR_MESSAGE);
       }
       
      //LOGIN INPUT VALUE VALIDATION 
       
     else{
           
           
            //Clienttable username column to ArrayList 
            
            userlist = new ArrayList();
            for(int i = 0;i<clienttable.getModel().getRowCount();i++)
            {
                userlist.add(clienttable.getModel().getValueAt(i,1)); //get the all row values at column index 1
            }
            
            
            
            //Clienttable password column to ArrayList 
            
            passlist = new ArrayList();
            for(int i = 0;i<clienttable.getModel().getRowCount();i++)
            {
                passlist.add(clienttable.getModel().getValueAt(i,2)); //get the all row values at column index 2
            }
            
            
            //used for storing name of the user once logged in
            namelist = new ArrayList();
            for(int i = 0;i<clienttable.getModel().getRowCount();i++)
            {
                namelist.add(clienttable.getModel().getValueAt(i,0)); //get the all row values at column index 0
            }
            
            //used for storing contact numbers of users
            numlist = new ArrayList();
            for(int i = 0;i<clienttable.getModel().getRowCount();i++){
                numlist.add(clienttable.getModel().getValueAt(i,3));
            }
            
            
        //If the logginnamefield value is not on the username ArrayList    
            
        if(!(userlist.contains(loginnamefield)) &&  passlist.contains(loginpassfield)){
            
               JOptionPane.showMessageDialog(this,"Incorrect Username", "Try again", JOptionPane.ERROR_MESSAGE);
            
        }
            
        
        //If the logginpassfield value is not on the password ArrayList    
        
           else if(!(passlist.contains(loginpassfield)) &&  userlist.contains(loginnamefield)){ 
                
                JOptionPane.showMessageDialog(this,"Incorrect Password", "Try again", JOptionPane.ERROR_MESSAGE);
           }
           
         //If the logginpassfield value and loginnamefield value is not on the passlist ArrayList and userlist ArrayList     
            else if(!(passlist.contains(loginpassfield)) &&  (!userlist.contains(loginnamefield))){ 
                
                JOptionPane.showMessageDialog(this,"Incorrect Login Details", "Try again", JOptionPane.ERROR_MESSAGE);
           }
             
        //If index number of loginnamefield and loginpassfield value is matched.  
           
        else if (userlist.indexOf(loginnamefield) == passlist.indexOf(loginpassfield)){
            
               loginnameDetails.add((String) namelist.get(userlist.indexOf(loginnamefield)));
               contactDetails.add((String) numlist.get(userlist.indexOf(loginnamefield)));
                //loginusernameDetails.add(loginnamefield);
               //Calling class for selectionpage 
               selectionpage sep = new selectionpage();
               sep.setVisible(true);
                //Initialization of username linkedlist to selection page
               //sep.loginusernameDetails = loginusernameDetails;
               sep.loginnameDetails = loginnameDetails;
               sep.contactDetails = contactDetails;
               this.dispose();
           }
        
        
        //If the loginnamefield value and loginpassfield value is not on the ArrayList.
        
        else{
            JOptionPane.showMessageDialog(this,"Incorrect login details", "Try again", JOptionPane.ERROR_MESSAGE);
           }
            
       
               }
    }//GEN-LAST:event_loginbuttonActionPerformed
 
    //Returns to the first page of the app, the Landing Page
    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        
        landingpage lap = new landingpage();
        lap.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_backActionPerformed

    private void loginusernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_loginusernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_loginusernameActionPerformed

    private void loginpasswordKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_loginpasswordKeyTyped

    }//GEN-LAST:event_loginpasswordKeyTyped

    //
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
   //WHEN JFRAME FORM IS CLOSED, IT WILL SAVE TABLE AND LINKEDLISTS DATA IN "FILE.BIN"    
      
     //Getting the clienttable model to be utilized     
          
        DefaultTableModel mod = (DefaultTableModel) clienttable.getModel();
        
    //Clienttable assigned to Vector     
        
        Vector<Vector> tableData = mod.getDataVector();
        Vector<Vector> myList = mod.getDataVector();
       
        try {
            
    //Create and Exports "file.bin" that contains column table values in the file of the project.        
        
            FileOutputStream file = new FileOutputStream("file.bin");
            ObjectOutputStream output = new ObjectOutputStream(file);
            
    //Creates and Exports "file.bin" that contains the LinkedLists values in the file of the project. 
     
            FileOutputStream fout = new FileOutputStream("file.bin");
            ObjectOutputStream out = new ObjectOutputStream(fout);
           
    //Writes data of Linkedlists        
            out.writeObject(myList);
            
    //Writes data of clienttables
    
            output.writeObject(tableData);

            output.close();
            out.close();
            fout.close();
            file.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        } 
         
         
         
    }//GEN-LAST:event_formWindowClosing

    //
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
    //WHEN JFRAME FORM IS OPENED, IT WILL READ TABLE AND LINKEDLISTS DATA IN "FILE.BIN"     
        try {
           
    //Imports "file.bin" that contains column table values in the file of the project.               
                 
            FileInputStream file = new FileInputStream("file.bin");
            ObjectInputStream input = new ObjectInputStream(file);
            
    //Imports "file.bin" that contains the LinkedLists values in the file of the project.         
            
            FileInputStream fin = new FileInputStream("file.bin");
            ObjectInputStream in = new ObjectInputStream(fin);
                 
    // Method for deserialization of object
      
    //Reads "file.bin" that contains the column table values
    
            Vector<Vector> tableData = (Vector<Vector>)input.readObject();
            
            input.close();
            file.close();
            
    //Reads "file.bin" that contains the LinkedLists values       
            
            Vector<Vector> myList = (Vector<Vector>)in.readObject();
            in.close();
            fin.close();     
            
    //Getting the clienttable model to be utilized          
            
            DefaultTableModel mod = (DefaultTableModel) clienttable.getModel();    
          
    //For loop that will scan the "file.bin" on how many rows does the saved table have       
            
            for (int i = 0; i < tableData.size(); i++) {    
                Vector row = tableData.get(i);            
                
    //Adds or copy every row indexes data to the clienttable.           
                
                mod.addRow(new Object[]{row.get(0), row.get(1), row.get(2), row.get(3), row.get(4)});
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
  
    }//GEN-LAST:event_formWindowOpened

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged

    }//GEN-LAST:event_formWindowStateChanged

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated
     
    }//GEN-LAST:event_formWindowActivated

    //
    
    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
     //WHEN JFRAME FORM IS LOST FOCUS, IT WILL SAVE TABLE AND LINKEDLISTS DATA IN "FILE.BIN"       
        
    //Getting the clienttable model to be utilized   
    
        DefaultTableModel mod = (DefaultTableModel) clienttable.getModel();
        
    //Clienttable and linkedlist data assigned to vector    
        
        Vector<Vector> tableData = mod.getDataVector();
        Vector<Vector> myList = mod.getDataVector();
       
        try {
               
    //Create and Exports "file.bin" that contains column table values in the file of the project.          
           
            FileOutputStream file = new FileOutputStream("file.bin");
            ObjectOutputStream output = new ObjectOutputStream(file);
            
    //Create and Exports "file.bin" that contains linkedlists values in the file of the project.         
            
            FileOutputStream fout = new FileOutputStream("file.bin");
            ObjectOutputStream out = new ObjectOutputStream(fout);     
    
     //Writes data of linkedlists values       
            out.writeObject(myList);
            
     //Writes data of clienttables
            output.writeObject(tableData);
            output.close();
            out.close();
            fout.close();
            file.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowLostFocus

    private void showActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_showActionPerformed

    }//GEN-LAST:event_showActionPerformed

    //Show password
    
    private void showMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_showMousePressed
        show.setVisible(false);
        hide.setVisible(true);
        loginpassword.setEchoChar('*'); 
    }//GEN-LAST:event_showMousePressed

    private void hideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_hideActionPerformed
       

    }//GEN-LAST:event_hideActionPerformed

    //Hide password
    
    private void hideMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_hideMousePressed
        show.setVisible(true);
        hide.setVisible(false);
        show.setText("Hide");
         loginpassword.setEchoChar((char)0); 
    }//GEN-LAST:event_hideMousePressed
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminpage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>


        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loginpage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JTable clienttable;
    private javax.swing.JButton hide;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton loginbutton;
    public javax.swing.JPanel loginpage;
    private javax.swing.JPasswordField loginpassword;
    private javax.swing.JTextField loginusername;
    private javax.swing.JButton show;
    // End of variables declaration//GEN-END:variables
}
