/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package dsafinalproject2;

import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.LinkedList;
import java.util.Queue;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableRowSorter;



public class orderlog extends javax.swing.JFrame {
    
    // Abstract Data Type Queue is used to store data from orders
    Queue<String> orders = new LinkedList <>();
    
    //String for storing the current user's username
    String username, name;
    
    //Used as for determining the order count whenever the program is used(resets to 1 at exiting)
    int count = 1;
    
    /**
     * Creates new form orderlog
     */
    public orderlog() {
        initComponents();
        
        receipttable.setAutoCreateRowSorter(true);
        
    
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        receipttable = new javax.swing.JTable();
        back = new javax.swing.JButton();
        orderlogdeletebutton = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jTextField1 = new javax.swing.JTextField();
        delete = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Spring N' Flow - Order Log");
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
                formWindowLostFocus(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        receipttable.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        receipttable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Round", "Slim", "Large", "Medium", "Small", "Water", "Payment", "Price", "Time", "Date"
            }
        ));
        jScrollPane1.setViewportView(receipttable);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 190, 1220, 460));

        back.setBackground(new java.awt.Color(153, 153, 153));
        back.setFont(new java.awt.Font("Segoe UI", 1, 15)); // NOI18N
        back.setText("Back");
        back.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backActionPerformed(evt);
            }
        });
        jPanel1.add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 30, 150, -1));

        orderlogdeletebutton.setBackground(new java.awt.Color(255, 153, 51));
        orderlogdeletebutton.setFont(new java.awt.Font("Segoe UI", 1, 23)); // NOI18N
        orderlogdeletebutton.setForeground(new java.awt.Color(255, 255, 255));
        orderlogdeletebutton.setText("Order Claimed");
        orderlogdeletebutton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                orderlogdeletebuttonActionPerformed(evt);
            }
        });
        jPanel1.add(orderlogdeletebutton, new org.netbeans.lib.awtextra.AbsoluteConstraints(380, 660, 880, 70));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 27)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 153, 0));
        jLabel1.setText("Order Log");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(590, 20, -1, -1));

        jPanel2.setBackground(new java.awt.Color(51, 51, 51));
        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Search", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 1, 19), new java.awt.Color(255, 153, 0))); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jTextField1.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        jTextField1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextField1KeyReleased(evt);
            }
        });
        jPanel2.add(jTextField1, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 20, 1127, 60));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 90, 1220, -1));

        delete.setBackground(new java.awt.Color(204, 51, 0));
        delete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        delete.setForeground(new java.awt.Color(255, 255, 255));
        delete.setText("Delete Order");
        delete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteActionPerformed(evt);
            }
        });
        jPanel1.add(delete, new org.netbeans.lib.awtextra.AbsoluteConstraints(50, 660, 320, 70));

        jLabel2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/dsafinalproject2/pxfuel (4).jpg"))); // NOI18N
        jLabel2.setText("jLabel2");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1320, 760));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    //
    
    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
         try {
            
    //Imports "delivery.bin" that contains column table values in the file of the project.  
             
            FileInputStream file = new FileInputStream("delivery.bin");
            ObjectInputStream input = new ObjectInputStream(file);

    // Method for deserialization of object
    //Reads "delivery.bin" that contains the column table values
            Vector<Vector> tableData = (Vector<Vector>)input.readObject();
            
            input.close();
            file.close();

    //Getting the clienttable model to be utilized 
    
          DefaultTableModel mod = (DefaultTableModel) receipttable.getModel();
          
    //For loop that will scan the "delivery.bin" on how many rows does the saved table have       
            for (int i = 0; i < tableData.size(); i++) {
                Vector row = tableData.get(i);
                
     //Adds or copy every row indexes data to the clienttable. 
                mod.addRow(new Object[]{row.get(0),row.get(1), row.get(2), row.get(3), row.get(4), row.get(5), row.get(6), row.get(7), row.get(8), row.get(9), row.get(10)});
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }    
    }//GEN-LAST:event_formWindowOpened

    //Returns to loginpage
    
    private void backActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backActionPerformed
        new adminpage().setVisible(true);
        this.dispose();               
    }//GEN-LAST:event_backActionPerformed

    //
    
    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
    //WHEN JFRAME FORM IS CLOSED, IT WILL SAVE TABLE DATA IN "DELIVERY.BIN"    
      
    //Getting the clienttable model to be utilized          
        DefaultTableModel mod = (DefaultTableModel) receipttable.getModel();
    //Receipttable assigned to Vector     
        Vector<Vector> tableData = mod.getDataVector();
       
        try {
            
    //Create and Exports "delivery.bin" that contains column table values in the file of the project. 
    
            FileOutputStream file = new FileOutputStream("delivery.bin");
            ObjectOutputStream output = new ObjectOutputStream(file);

            // Method for serialization of object
            //Writes data of receipttabe
            output.writeObject(tableData);

            output.close();
            file.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowClosing

    //Search engine to see the orders according to input
    
    private void jTextField1KeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextField1KeyReleased
   
        //Getting the clienttable model to be utilized  
        DefaultTableModel mod = (DefaultTableModel) receipttable.getModel();
     
        //RowTable Sort initialize variable
        TableRowSorter<DefaultTableModel> objl = new TableRowSorter<>(mod);
        
        //Sets Rowsorter for clienttable
        receipttable.setRowSorter(objl);
        
        //It gets very Text being Released or typed by the user in the searchfield
        objl.setRowFilter(RowFilter.regexFilter(jTextField1.getText()));
    }//GEN-LAST:event_jTextField1KeyReleased

    //ORDER CLAIMING BUTTON: deleting the first order done in the app
    //When clicked, the table removes the very first order at the queue and;
    //Generates a descriptive message containing the order details 
    
    private void orderlogdeletebuttonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_orderlogdeletebuttonActionPerformed
     
        
        DefaultTableModel mod = (DefaultTableModel) receipttable.getModel();
        
        //Gets the values at the very first row of the table
        //This method allows the table to exert behavior similar to a queue where values are deleted according to what order/s came first 
        
        //Sorting the table does not affect the order of the queue
        //"Claiming is done in a First Come First Serve Basis"
        
        String userlist = mod.getValueAt(0, 0). toString();
        String roundlist = mod.getValueAt(0, 1). toString();
        String slimlist = mod.getValueAt(0, 2). toString();
        String largelist = mod.getValueAt(0, 3). toString();
        String mediumlist = mod.getValueAt(0, 4). toString();
        String smalllist = mod.getValueAt(0, 5). toString();
        String waterlist = mod.getValueAt(0, 6). toString();
        String paymentlist = mod.getValueAt(0, 7). toString();
        String pricelist = mod.getValueAt(0, 8). toString();
        
        //Orders are added to the queue to be displayed in order
        
        orders.add("Name: " + userlist);
        orders.add("Round: " + roundlist);
        orders.add("Slim: " + slimlist);
        orders.add("Large: " + largelist);
        orders.add("Medium: " + mediumlist);
        orders.add("Small: " + smalllist);
        orders.add("Water: " + waterlist);
        orders.add("Payment: " + paymentlist);
        orders.add("Price: " + pricelist);

        
        int row = 0;
        
        //Generates a decriptive message of the details of the order 
        
        if (row < 0) {
              JOptionPane.showMessageDialog(this,"Empty Row", "Error", JOptionPane.ERROR_MESSAGE);
        }
        
        
        else{
      
        //Prints Claimed Orders
         StringBuilder Mes = new StringBuilder();
         Mes.append("Order Claimed").append("\n").append("\n");
         Mes.append("Order of the Day No :").append(count).append("\n");
         Mes.append("").append(orders.toString().replace("[","").replace(","," ,").replace("]","")).append("\n");
         JOptionPane.showMessageDialog(null, Mes.toString(), "Info", JOptionPane.INFORMATION_MESSAGE);
           orders.clear();
           mod.removeRow(row);
           count++;

        }
        
    }//GEN-LAST:event_orderlogdeletebuttonActionPerformed

    //REMOVE ORDER button:
    //Its purpose is to eliminate any order that is not needed in the order history log
    //Due to users not being able to receive or pay for their order
    
    private void deleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteActionPerformed
        int row = receipttable.getSelectedRow();
        //int row = 0;
            
        if (row < 0) {
            
            
              JOptionPane.showMessageDialog(this,"Select a Row", "Select Row", JOptionPane.ERROR_MESSAGE);
          
        }
        else{
            int p =  JOptionPane.showConfirmDialog(null, "Delete Order?", "Delete",JOptionPane.YES_NO_OPTION);

            if(p == 0){
           DefaultTableModel mod = (DefaultTableModel) receipttable.getModel();
           mod.removeRow(row);
                         JOptionPane.showMessageDialog(this,"Order Deleted", "Info", JOptionPane.INFORMATION_MESSAGE);

            }
  

         

           


 
    }     
    }//GEN-LAST:event_deleteActionPerformed

    private void formWindowLostFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowLostFocus
 //WHEN JFRAME FORM IS CLOSED, IT WILL SAVE TABLE DATA IN "DELIVERY.BIN"    
      
    //Getting the clienttable model to be utilized          
        DefaultTableModel mod = (DefaultTableModel) receipttable.getModel();
    //Receipttable assigned to Vector     
        Vector<Vector> tableData = mod.getDataVector();
       
        try {
            
    //Create and Exports "delivery.bin" that contains column table values in the file of the project. 
    
            FileOutputStream file = new FileOutputStream("delivery.bin");
            ObjectOutputStream output = new ObjectOutputStream(file);

            // Method for serialization of object
            //Writes data of receipttabe
            output.writeObject(tableData);

            output.close();
            file.close();
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_formWindowLostFocus
    
    /*
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(orderlog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(orderlog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(orderlog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(orderlog.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new orderlog().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton back;
    private javax.swing.JButton delete;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JButton orderlogdeletebutton;
    private javax.swing.JTable receipttable;
    // End of variables declaration//GEN-END:variables
}
